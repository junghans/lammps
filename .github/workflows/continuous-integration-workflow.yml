name: CI
on: 
  push:
    branches:
      - master
      - github-actions
  pull_request:
    branches:
      - master

jobs:
  compilation_tests:
    continue-on-error: true 
    strategy:
      matrix:
        os: [ubuntu18.04, centos7, fedora32_mingw]
        build: [cmake_kokkos_mpi_openmp_clang_shared]
        exclude:
         - os: centos7
           build: cmake_kokkos_mpi_openmp_clang_shared
    runs-on: ubuntu-latest
    container: "lammps/buildenv:${{ matrix.os }}"
    env:
      CCACHE_HASH: ccache-${{ matrix.os }}-${{ matrix.build }}
      LAMMPS_COMPILE_NPROC: 2
      LAMMPS_CI_RUNNER: github
      CCACHE_DIR: ~/.ccache
    steps:
      - name: Get time
        id: time
        run: echo "::set-output name=time::$(date +%s)"
      - uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{ env.CCACHE_HASH }}-${{ steps.time.outputs.time }}
          restore-keys: ${{ env.CCACHE_HASH }}
      - uses: actions/checkout@master
      - name: Install Deps
        uses: actions/checkout@master
        with:
          repository: 'lammps/lammps-testing'
          ref: 'master'
          path: 'lammps-testing'
      - name: Build
        shell: bash -l {0}
        run: |
          if [ "${{ matrix.os }}" != "ubuntu18.04" ] ; then
            module load mpi
          fi
          ccache -z
          export LAMMPS_DIR=$PWD
          lammps-testing/scripts/builds/${{ matrix.build }}.sh
          ccache -s
      - name: Tests
        run: cd build && ctest --output-on-failure
      - name: Install
        run: cmake --install build
